module ACTION_EXPLOIT (
	output logic [31:0] max_Q,
	output logic [2:0] action,
	input logic  [31:0] old_Q [37][4],
	input logic [5:0] maze_state,
	input logic clk,
	input logic rst,
	input logic move_complete);

	
	logic [31:0] current_Q[4];
	always_ff@(posedge move_complete)
	begin
		current_Q = old_Q[maze_state];
		if (current_Q[0] > current_Q[1] && current_Q[0] > current_Q[2] && current_Q[0] > current_Q[3])
			begin
				max_Q = current_Q[0];
				action  = 3'd0;
			end
		else if (current_Q[1] > current_Q[0] && current_Q[1] > current_Q[2] && current_Q[1] > current_Q[3])
			begin
				max_Q = current_Q[1];
				action  = 3'd1;
			end
		else if (current_Q[2] > current_Q[1] && current_Q[2] > current_Q[0] && current_Q[2] > current_Q[3])
			begin
				max_Q = current_Q[2];
				action  = 3'd2;
			end
		else if (current_Q[3] > current_Q[1] && current_Q[3] > current_Q[2] && current_Q[3] > current_Q[0])
			begin
				max_Q = current_Q[3];
				action  = 3'd3;
			end
	end
	
	
endmodule
